syntax = "proto3";

option java_outer_classname = "GameNetworkProto";
option java_package = "network";

message PlayerID {
    string playerID = 1;
}


message CoinMessage {
    double x = 1;
    double y = 2;
}


message PlayerMessage {
    string name = 1;
    string color = 2;
    string score = 3;
    double x = 4;
    double y = 5;
}


message InitialPlayerState {
    string name = 1;
    string color = 2;
}


message UpdateFromClient {
    string gameObjectUUID = 1;
    PlayerMessage playerState = 3;
    repeated string deletedCoins = 2;
    string timestamp = 4;

    enum MovingRooms {
        NOT = 0;
        LEFT = 1;
        RIGHT = 2;
    }

    MovingRooms movingRooms = 5;
}

message UpdateFromServer {
    map<string, PlayerMessage> playerStates = 1;
    map<string, CoinMessage> coinStates = 2;
    string timestamp = 3;
    string worldColor = 4;
}

message Empty {

}


message SuperPeerInfo {
    string hostname = 1;
}


message InitPlayerResponse {
    string playerUUID = 1;
    UpdateFromServer initialState = 2;
}


service GameService {
   rpc publishUpdate(UpdateFromClient) returns (UpdateFromServer);
   rpc getAssignedSuperPeer(Empty) returns (SuperPeerInfo);
   rpc initPlayer(InitialPlayerState) returns (UpdateFromServer);
   rpc removeMe(PlayerID) returns (Empty);
}